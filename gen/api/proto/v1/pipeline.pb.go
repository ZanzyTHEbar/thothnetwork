// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/proto/v1/pipeline.proto

package thothnetworkv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProcessingStage represents a stage in the processing pipeline
type ProcessingStage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the stage
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name is the name of the stage
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Type is the type of the stage
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Config is the configuration for the stage
	Config        map[string]string `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessingStage) Reset() {
	*x = ProcessingStage{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessingStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingStage) ProtoMessage() {}

func (x *ProcessingStage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingStage.ProtoReflect.Descriptor instead.
func (*ProcessingStage) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessingStage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcessingStage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessingStage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProcessingStage) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

// Pipeline represents a processing pipeline
type Pipeline struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the pipeline
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name is the name of the pipeline
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Stages is the list of stages in the pipeline
	Stages []*ProcessingStage `protobuf:"bytes,3,rep,name=stages,proto3" json:"stages,omitempty"`
	// InputTopic is the topic to subscribe to for input messages
	InputTopic string `protobuf:"bytes,4,opt,name=input_topic,json=inputTopic,proto3" json:"input_topic,omitempty"`
	// OutputTopic is the topic to publish output messages to
	OutputTopic   string `protobuf:"bytes,5,opt,name=output_topic,json=outputTopic,proto3" json:"output_topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{1}
}

func (x *Pipeline) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pipeline) GetStages() []*ProcessingStage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *Pipeline) GetInputTopic() string {
	if x != nil {
		return x.InputTopic
	}
	return ""
}

func (x *Pipeline) GetOutputTopic() string {
	if x != nil {
		return x.OutputTopic
	}
	return ""
}

// CreatePipelineRequest is the request for creating a pipeline
type CreatePipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the name of the pipeline
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Stages is the list of stages in the pipeline
	Stages []*ProcessingStage `protobuf:"bytes,2,rep,name=stages,proto3" json:"stages,omitempty"`
	// InputTopic is the topic to subscribe to for input messages
	InputTopic string `protobuf:"bytes,3,opt,name=input_topic,json=inputTopic,proto3" json:"input_topic,omitempty"`
	// OutputTopic is the topic to publish output messages to
	OutputTopic   string `protobuf:"bytes,4,opt,name=output_topic,json=outputTopic,proto3" json:"output_topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePipelineRequest) Reset() {
	*x = CreatePipelineRequest{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineRequest) ProtoMessage() {}

func (x *CreatePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineRequest.ProtoReflect.Descriptor instead.
func (*CreatePipelineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePipelineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePipelineRequest) GetStages() []*ProcessingStage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *CreatePipelineRequest) GetInputTopic() string {
	if x != nil {
		return x.InputTopic
	}
	return ""
}

func (x *CreatePipelineRequest) GetOutputTopic() string {
	if x != nil {
		return x.OutputTopic
	}
	return ""
}

// CreatePipelineResponse is the response for creating a pipeline
type CreatePipelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the created pipeline
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Pipeline is the created pipeline
	Pipeline      *Pipeline `protobuf:"bytes,2,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePipelineResponse) Reset() {
	*x = CreatePipelineResponse{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineResponse) ProtoMessage() {}

func (x *CreatePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineResponse.ProtoReflect.Descriptor instead.
func (*CreatePipelineResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePipelineResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreatePipelineResponse) GetPipeline() *Pipeline {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

// GetPipelineRequest is the request for getting a pipeline
type GetPipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the pipeline
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPipelineRequest) Reset() {
	*x = GetPipelineRequest{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineRequest) ProtoMessage() {}

func (x *GetPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{4}
}

func (x *GetPipelineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetPipelineResponse is the response for getting a pipeline
type GetPipelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pipeline is the requested pipeline
	Pipeline      *Pipeline `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPipelineResponse) Reset() {
	*x = GetPipelineResponse{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineResponse) ProtoMessage() {}

func (x *GetPipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineResponse.ProtoReflect.Descriptor instead.
func (*GetPipelineResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{5}
}

func (x *GetPipelineResponse) GetPipeline() *Pipeline {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

// UpdatePipelineRequest is the request for updating a pipeline
type UpdatePipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the pipeline
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name is the name of the pipeline
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Stages is the list of stages in the pipeline
	Stages []*ProcessingStage `protobuf:"bytes,3,rep,name=stages,proto3" json:"stages,omitempty"`
	// InputTopic is the topic to subscribe to for input messages
	InputTopic string `protobuf:"bytes,4,opt,name=input_topic,json=inputTopic,proto3" json:"input_topic,omitempty"`
	// OutputTopic is the topic to publish output messages to
	OutputTopic   string `protobuf:"bytes,5,opt,name=output_topic,json=outputTopic,proto3" json:"output_topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePipelineRequest) Reset() {
	*x = UpdatePipelineRequest{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePipelineRequest) ProtoMessage() {}

func (x *UpdatePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePipelineRequest.ProtoReflect.Descriptor instead.
func (*UpdatePipelineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePipelineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePipelineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePipelineRequest) GetStages() []*ProcessingStage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *UpdatePipelineRequest) GetInputTopic() string {
	if x != nil {
		return x.InputTopic
	}
	return ""
}

func (x *UpdatePipelineRequest) GetOutputTopic() string {
	if x != nil {
		return x.OutputTopic
	}
	return ""
}

// UpdatePipelineResponse is the response for updating a pipeline
type UpdatePipelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pipeline is the updated pipeline
	Pipeline      *Pipeline `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePipelineResponse) Reset() {
	*x = UpdatePipelineResponse{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePipelineResponse) ProtoMessage() {}

func (x *UpdatePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePipelineResponse.ProtoReflect.Descriptor instead.
func (*UpdatePipelineResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePipelineResponse) GetPipeline() *Pipeline {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

// DeletePipelineRequest is the request for deleting a pipeline
type DeletePipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the pipeline
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePipelineRequest) Reset() {
	*x = DeletePipelineRequest{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePipelineRequest) ProtoMessage() {}

func (x *DeletePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePipelineRequest.ProtoReflect.Descriptor instead.
func (*DeletePipelineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePipelineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DeletePipelineResponse is the response for deleting a pipeline
type DeletePipelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates whether the pipeline was successfully deleted
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePipelineResponse) Reset() {
	*x = DeletePipelineResponse{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePipelineResponse) ProtoMessage() {}

func (x *DeletePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePipelineResponse.ProtoReflect.Descriptor instead.
func (*DeletePipelineResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePipelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ListPipelinesRequest is the request for listing pipelines
type ListPipelinesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelinesRequest) Reset() {
	*x = ListPipelinesRequest{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelinesRequest) ProtoMessage() {}

func (x *ListPipelinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelinesRequest.ProtoReflect.Descriptor instead.
func (*ListPipelinesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{10}
}

// ListPipelinesResponse is the response for listing pipelines
type ListPipelinesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pipelines is the list of pipelines
	Pipelines     []*Pipeline `protobuf:"bytes,1,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelinesResponse) Reset() {
	*x = ListPipelinesResponse{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelinesResponse) ProtoMessage() {}

func (x *ListPipelinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelinesResponse.ProtoReflect.Descriptor instead.
func (*ListPipelinesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{11}
}

func (x *ListPipelinesResponse) GetPipelines() []*Pipeline {
	if x != nil {
		return x.Pipelines
	}
	return nil
}

// ProcessMessageRequest is the request for processing a message through a pipeline
type ProcessMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PipelineID is the ID of the pipeline to use
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// Message is the message to process
	Message       *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessMessageRequest) Reset() {
	*x = ProcessMessageRequest{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMessageRequest) ProtoMessage() {}

func (x *ProcessMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMessageRequest.ProtoReflect.Descriptor instead.
func (*ProcessMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{12}
}

func (x *ProcessMessageRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *ProcessMessageRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// ProcessMessageResponse is the response for processing a message through a pipeline
type ProcessMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Message is the processed message
	Message       *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessMessageResponse) Reset() {
	*x = ProcessMessageResponse{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMessageResponse) ProtoMessage() {}

func (x *ProcessMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMessageResponse.ProtoReflect.Descriptor instead.
func (*ProcessMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{13}
}

func (x *ProcessMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// StartPipelineRequest is the request for starting a pipeline
type StartPipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the pipeline
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartPipelineRequest) Reset() {
	*x = StartPipelineRequest{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPipelineRequest) ProtoMessage() {}

func (x *StartPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPipelineRequest.ProtoReflect.Descriptor instead.
func (*StartPipelineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{14}
}

func (x *StartPipelineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// StartPipelineResponse is the response for starting a pipeline
type StartPipelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates whether the pipeline was successfully started
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartPipelineResponse) Reset() {
	*x = StartPipelineResponse{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPipelineResponse) ProtoMessage() {}

func (x *StartPipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPipelineResponse.ProtoReflect.Descriptor instead.
func (*StartPipelineResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{15}
}

func (x *StartPipelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// StopPipelineRequest is the request for stopping a pipeline
type StopPipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the pipeline
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopPipelineRequest) Reset() {
	*x = StopPipelineRequest{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPipelineRequest) ProtoMessage() {}

func (x *StopPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPipelineRequest.ProtoReflect.Descriptor instead.
func (*StopPipelineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{16}
}

func (x *StopPipelineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// StopPipelineResponse is the response for stopping a pipeline
type StopPipelineResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates whether the pipeline was successfully stopped
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopPipelineResponse) Reset() {
	*x = StopPipelineResponse{}
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPipelineResponse) ProtoMessage() {}

func (x *StopPipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_pipeline_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPipelineResponse.ProtoReflect.Descriptor instead.
func (*StopPipelineResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_pipeline_proto_rawDescGZIP(), []int{17}
}

func (x *StopPipelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_api_proto_v1_pipeline_proto protoreflect.FileDescriptor

const file_api_proto_v1_pipeline_proto_rawDesc = "" +
	"\n" +
	"\x1bapi/proto/v1/pipeline.proto\x12\x0fthothnetwork.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1aapi/proto/v1/message.proto\"\xe5\x01\n" +
	"\x0fProcessingStage\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04type\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04type\x12D\n" +
	"\x06config\x18\x04 \x03(\v2,.thothnetwork.v1.ProcessingStage.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd0\x01\n" +
	"\bPipeline\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x128\n" +
	"\x06stages\x18\x03 \x03(\v2 .thothnetwork.v1.ProcessingStageR\x06stages\x12(\n" +
	"\vinput_topic\x18\x04 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\n" +
	"inputTopic\x12*\n" +
	"\foutput_topic\x18\x05 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\voutputTopic\"\xc4\x01\n" +
	"\x15CreatePipelineRequest\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x128\n" +
	"\x06stages\x18\x02 \x03(\v2 .thothnetwork.v1.ProcessingStageR\x06stages\x12(\n" +
	"\vinput_topic\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\n" +
	"inputTopic\x12*\n" +
	"\foutput_topic\x18\x04 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\voutputTopic\"_\n" +
	"\x16CreatePipelineResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x125\n" +
	"\bpipeline\x18\x02 \x01(\v2\x19.thothnetwork.v1.PipelineR\bpipeline\"-\n" +
	"\x12GetPipelineRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\"L\n" +
	"\x13GetPipelineResponse\x125\n" +
	"\bpipeline\x18\x01 \x01(\v2\x19.thothnetwork.v1.PipelineR\bpipeline\"\xc2\x01\n" +
	"\x15UpdatePipelineRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x128\n" +
	"\x06stages\x18\x03 \x03(\v2 .thothnetwork.v1.ProcessingStageR\x06stages\x12\x1f\n" +
	"\vinput_topic\x18\x04 \x01(\tR\n" +
	"inputTopic\x12!\n" +
	"\foutput_topic\x18\x05 \x01(\tR\voutputTopic\"O\n" +
	"\x16UpdatePipelineResponse\x125\n" +
	"\bpipeline\x18\x01 \x01(\v2\x19.thothnetwork.v1.PipelineR\bpipeline\"0\n" +
	"\x15DeletePipelineRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\"2\n" +
	"\x16DeletePipelineResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x16\n" +
	"\x14ListPipelinesRequest\"P\n" +
	"\x15ListPipelinesResponse\x127\n" +
	"\tpipelines\x18\x01 \x03(\v2\x19.thothnetwork.v1.PipelineR\tpipelines\"u\n" +
	"\x15ProcessMessageRequest\x12(\n" +
	"\vpipeline_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\n" +
	"pipelineId\x122\n" +
	"\amessage\x18\x02 \x01(\v2\x18.thothnetwork.v1.MessageR\amessage\"L\n" +
	"\x16ProcessMessageResponse\x122\n" +
	"\amessage\x18\x01 \x01(\v2\x18.thothnetwork.v1.MessageR\amessage\"/\n" +
	"\x14StartPipelineRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\"1\n" +
	"\x15StartPipelineResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\".\n" +
	"\x13StopPipelineRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\"0\n" +
	"\x14StopPipelineResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\x94\x06\n" +
	"\x0fPipelineService\x12a\n" +
	"\x0eCreatePipeline\x12&.thothnetwork.v1.CreatePipelineRequest\x1a'.thothnetwork.v1.CreatePipelineResponse\x12X\n" +
	"\vGetPipeline\x12#.thothnetwork.v1.GetPipelineRequest\x1a$.thothnetwork.v1.GetPipelineResponse\x12a\n" +
	"\x0eUpdatePipeline\x12&.thothnetwork.v1.UpdatePipelineRequest\x1a'.thothnetwork.v1.UpdatePipelineResponse\x12a\n" +
	"\x0eDeletePipeline\x12&.thothnetwork.v1.DeletePipelineRequest\x1a'.thothnetwork.v1.DeletePipelineResponse\x12^\n" +
	"\rListPipelines\x12%.thothnetwork.v1.ListPipelinesRequest\x1a&.thothnetwork.v1.ListPipelinesResponse\x12a\n" +
	"\x0eProcessMessage\x12&.thothnetwork.v1.ProcessMessageRequest\x1a'.thothnetwork.v1.ProcessMessageResponse\x12^\n" +
	"\rStartPipeline\x12%.thothnetwork.v1.StartPipelineRequest\x1a&.thothnetwork.v1.StartPipelineResponse\x12[\n" +
	"\fStopPipeline\x12$.thothnetwork.v1.StopPipelineRequest\x1a%.thothnetwork.v1.StopPipelineResponseBAZ?github.com/ZanzyTHEbar/thothnetwork/gen/proto/v1;thothnetworkv1b\x06proto3"

var (
	file_api_proto_v1_pipeline_proto_rawDescOnce sync.Once
	file_api_proto_v1_pipeline_proto_rawDescData []byte
)

func file_api_proto_v1_pipeline_proto_rawDescGZIP() []byte {
	file_api_proto_v1_pipeline_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_pipeline_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_v1_pipeline_proto_rawDesc), len(file_api_proto_v1_pipeline_proto_rawDesc)))
	})
	return file_api_proto_v1_pipeline_proto_rawDescData
}

var file_api_proto_v1_pipeline_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_proto_v1_pipeline_proto_goTypes = []any{
	(*ProcessingStage)(nil),        // 0: thothnetwork.v1.ProcessingStage
	(*Pipeline)(nil),               // 1: thothnetwork.v1.Pipeline
	(*CreatePipelineRequest)(nil),  // 2: thothnetwork.v1.CreatePipelineRequest
	(*CreatePipelineResponse)(nil), // 3: thothnetwork.v1.CreatePipelineResponse
	(*GetPipelineRequest)(nil),     // 4: thothnetwork.v1.GetPipelineRequest
	(*GetPipelineResponse)(nil),    // 5: thothnetwork.v1.GetPipelineResponse
	(*UpdatePipelineRequest)(nil),  // 6: thothnetwork.v1.UpdatePipelineRequest
	(*UpdatePipelineResponse)(nil), // 7: thothnetwork.v1.UpdatePipelineResponse
	(*DeletePipelineRequest)(nil),  // 8: thothnetwork.v1.DeletePipelineRequest
	(*DeletePipelineResponse)(nil), // 9: thothnetwork.v1.DeletePipelineResponse
	(*ListPipelinesRequest)(nil),   // 10: thothnetwork.v1.ListPipelinesRequest
	(*ListPipelinesResponse)(nil),  // 11: thothnetwork.v1.ListPipelinesResponse
	(*ProcessMessageRequest)(nil),  // 12: thothnetwork.v1.ProcessMessageRequest
	(*ProcessMessageResponse)(nil), // 13: thothnetwork.v1.ProcessMessageResponse
	(*StartPipelineRequest)(nil),   // 14: thothnetwork.v1.StartPipelineRequest
	(*StartPipelineResponse)(nil),  // 15: thothnetwork.v1.StartPipelineResponse
	(*StopPipelineRequest)(nil),    // 16: thothnetwork.v1.StopPipelineRequest
	(*StopPipelineResponse)(nil),   // 17: thothnetwork.v1.StopPipelineResponse
	nil,                            // 18: thothnetwork.v1.ProcessingStage.ConfigEntry
	(*Message)(nil),                // 19: thothnetwork.v1.Message
}
var file_api_proto_v1_pipeline_proto_depIdxs = []int32{
	18, // 0: thothnetwork.v1.ProcessingStage.config:type_name -> thothnetwork.v1.ProcessingStage.ConfigEntry
	0,  // 1: thothnetwork.v1.Pipeline.stages:type_name -> thothnetwork.v1.ProcessingStage
	0,  // 2: thothnetwork.v1.CreatePipelineRequest.stages:type_name -> thothnetwork.v1.ProcessingStage
	1,  // 3: thothnetwork.v1.CreatePipelineResponse.pipeline:type_name -> thothnetwork.v1.Pipeline
	1,  // 4: thothnetwork.v1.GetPipelineResponse.pipeline:type_name -> thothnetwork.v1.Pipeline
	0,  // 5: thothnetwork.v1.UpdatePipelineRequest.stages:type_name -> thothnetwork.v1.ProcessingStage
	1,  // 6: thothnetwork.v1.UpdatePipelineResponse.pipeline:type_name -> thothnetwork.v1.Pipeline
	1,  // 7: thothnetwork.v1.ListPipelinesResponse.pipelines:type_name -> thothnetwork.v1.Pipeline
	19, // 8: thothnetwork.v1.ProcessMessageRequest.message:type_name -> thothnetwork.v1.Message
	19, // 9: thothnetwork.v1.ProcessMessageResponse.message:type_name -> thothnetwork.v1.Message
	2,  // 10: thothnetwork.v1.PipelineService.CreatePipeline:input_type -> thothnetwork.v1.CreatePipelineRequest
	4,  // 11: thothnetwork.v1.PipelineService.GetPipeline:input_type -> thothnetwork.v1.GetPipelineRequest
	6,  // 12: thothnetwork.v1.PipelineService.UpdatePipeline:input_type -> thothnetwork.v1.UpdatePipelineRequest
	8,  // 13: thothnetwork.v1.PipelineService.DeletePipeline:input_type -> thothnetwork.v1.DeletePipelineRequest
	10, // 14: thothnetwork.v1.PipelineService.ListPipelines:input_type -> thothnetwork.v1.ListPipelinesRequest
	12, // 15: thothnetwork.v1.PipelineService.ProcessMessage:input_type -> thothnetwork.v1.ProcessMessageRequest
	14, // 16: thothnetwork.v1.PipelineService.StartPipeline:input_type -> thothnetwork.v1.StartPipelineRequest
	16, // 17: thothnetwork.v1.PipelineService.StopPipeline:input_type -> thothnetwork.v1.StopPipelineRequest
	3,  // 18: thothnetwork.v1.PipelineService.CreatePipeline:output_type -> thothnetwork.v1.CreatePipelineResponse
	5,  // 19: thothnetwork.v1.PipelineService.GetPipeline:output_type -> thothnetwork.v1.GetPipelineResponse
	7,  // 20: thothnetwork.v1.PipelineService.UpdatePipeline:output_type -> thothnetwork.v1.UpdatePipelineResponse
	9,  // 21: thothnetwork.v1.PipelineService.DeletePipeline:output_type -> thothnetwork.v1.DeletePipelineResponse
	11, // 22: thothnetwork.v1.PipelineService.ListPipelines:output_type -> thothnetwork.v1.ListPipelinesResponse
	13, // 23: thothnetwork.v1.PipelineService.ProcessMessage:output_type -> thothnetwork.v1.ProcessMessageResponse
	15, // 24: thothnetwork.v1.PipelineService.StartPipeline:output_type -> thothnetwork.v1.StartPipelineResponse
	17, // 25: thothnetwork.v1.PipelineService.StopPipeline:output_type -> thothnetwork.v1.StopPipelineResponse
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_proto_v1_pipeline_proto_init() }
func file_api_proto_v1_pipeline_proto_init() {
	if File_api_proto_v1_pipeline_proto != nil {
		return
	}
	file_api_proto_v1_message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_v1_pipeline_proto_rawDesc), len(file_api_proto_v1_pipeline_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_v1_pipeline_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_pipeline_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_pipeline_proto_msgTypes,
	}.Build()
	File_api_proto_v1_pipeline_proto = out.File
	file_api_proto_v1_pipeline_proto_goTypes = nil
	file_api_proto_v1_pipeline_proto_depIdxs = nil
}
