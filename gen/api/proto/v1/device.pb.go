// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/proto/v1/device.proto

package thothnetworkv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DeviceStatus represents the status of a device
type DeviceStatus int32

const (
	DeviceStatus_DEVICE_STATUS_UNSPECIFIED  DeviceStatus = 0
	DeviceStatus_DEVICE_STATUS_ONLINE       DeviceStatus = 1
	DeviceStatus_DEVICE_STATUS_OFFLINE      DeviceStatus = 2
	DeviceStatus_DEVICE_STATUS_DISCONNECTED DeviceStatus = 3
	DeviceStatus_DEVICE_STATUS_ERROR        DeviceStatus = 4
)

// Enum value maps for DeviceStatus.
var (
	DeviceStatus_name = map[int32]string{
		0: "DEVICE_STATUS_UNSPECIFIED",
		1: "DEVICE_STATUS_ONLINE",
		2: "DEVICE_STATUS_OFFLINE",
		3: "DEVICE_STATUS_DISCONNECTED",
		4: "DEVICE_STATUS_ERROR",
	}
	DeviceStatus_value = map[string]int32{
		"DEVICE_STATUS_UNSPECIFIED":  0,
		"DEVICE_STATUS_ONLINE":       1,
		"DEVICE_STATUS_OFFLINE":      2,
		"DEVICE_STATUS_DISCONNECTED": 3,
		"DEVICE_STATUS_ERROR":        4,
	}
)

func (x DeviceStatus) Enum() *DeviceStatus {
	p := new(DeviceStatus)
	*p = x
	return p
}

func (x DeviceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_device_proto_enumTypes[0].Descriptor()
}

func (DeviceStatus) Type() protoreflect.EnumType {
	return &file_api_proto_v1_device_proto_enumTypes[0]
}

func (x DeviceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceStatus.Descriptor instead.
func (DeviceStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{0}
}

// Device represents an IoT device in the system
type Device struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the device
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name is the human-readable name of the device
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Type is the type of the device
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Status is the current status of the device
	Status DeviceStatus `protobuf:"varint,4,opt,name=status,proto3,enum=thothnetwork.v1.DeviceStatus" json:"status,omitempty"`
	// Metadata is additional information about the device
	Metadata map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// LastSeen is the timestamp when the device was last seen
	LastSeen *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	// CreatedAt is the timestamp when the device was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// UpdatedAt is the timestamp when the device was last updated
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_api_proto_v1_device_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{0}
}

func (x *Device) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Device) GetStatus() DeviceStatus {
	if x != nil {
		return x.Status
	}
	return DeviceStatus_DEVICE_STATUS_UNSPECIFIED
}

func (x *Device) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Device) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *Device) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Device) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// RegisterDeviceRequest is the request for registering a device
type RegisterDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the human-readable name of the device
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type is the type of the device
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Metadata is additional information about the device
	Metadata      map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDeviceRequest) Reset() {
	*x = RegisterDeviceRequest{}
	mi := &file_api_proto_v1_device_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceRequest) ProtoMessage() {}

func (x *RegisterDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceRequest.ProtoReflect.Descriptor instead.
func (*RegisterDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterDeviceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterDeviceRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RegisterDeviceRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// RegisterDeviceResponse is the response for registering a device
type RegisterDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the registered device
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Device is the registered device
	Device        *Device `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDeviceResponse) Reset() {
	*x = RegisterDeviceResponse{}
	mi := &file_api_proto_v1_device_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceResponse) ProtoMessage() {}

func (x *RegisterDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceResponse.ProtoReflect.Descriptor instead.
func (*RegisterDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterDeviceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegisterDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// GetDeviceRequest is the request for getting a device
type GetDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the device
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceRequest) Reset() {
	*x = GetDeviceRequest{}
	mi := &file_api_proto_v1_device_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceRequest) ProtoMessage() {}

func (x *GetDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{3}
}

func (x *GetDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetDeviceResponse is the response for getting a device
type GetDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device is the requested device
	Device        *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceResponse) Reset() {
	*x = GetDeviceResponse{}
	mi := &file_api_proto_v1_device_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceResponse) ProtoMessage() {}

func (x *GetDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{4}
}

func (x *GetDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// UpdateDeviceRequest is the request for updating a device
type UpdateDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the device
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name is the human-readable name of the device
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Type is the type of the device
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Metadata is additional information about the device
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeviceRequest) Reset() {
	*x = UpdateDeviceRequest{}
	mi := &file_api_proto_v1_device_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceRequest) ProtoMessage() {}

func (x *UpdateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDeviceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDeviceRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateDeviceRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// UpdateDeviceResponse is the response for updating a device
type UpdateDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device is the updated device
	Device        *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeviceResponse) Reset() {
	*x = UpdateDeviceResponse{}
	mi := &file_api_proto_v1_device_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceResponse) ProtoMessage() {}

func (x *UpdateDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

// DeleteDeviceRequest is the request for deleting a device
type DeleteDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique identifier for the device
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	mi := &file_api_proto_v1_device_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DeleteDeviceResponse is the response for deleting a device
type DeleteDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates whether the device was successfully deleted
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDeviceResponse) Reset() {
	*x = DeleteDeviceResponse{}
	mi := &file_api_proto_v1_device_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceResponse) ProtoMessage() {}

func (x *DeleteDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceResponse.ProtoReflect.Descriptor instead.
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDeviceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ListDevicesRequest is the request for listing devices
type ListDevicesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types is the list of device types to filter by
	Types []string `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	// Statuses is the list of device statuses to filter by
	Statuses []DeviceStatus `protobuf:"varint,2,rep,packed,name=statuses,proto3,enum=thothnetwork.v1.DeviceStatus" json:"statuses,omitempty"`
	// Metadata is the metadata to filter by
	Metadata      map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDevicesRequest) Reset() {
	*x = ListDevicesRequest{}
	mi := &file_api_proto_v1_device_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesRequest) ProtoMessage() {}

func (x *ListDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListDevicesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{9}
}

func (x *ListDevicesRequest) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *ListDevicesRequest) GetStatuses() []DeviceStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListDevicesRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ListDevicesResponse is the response for listing devices
type ListDevicesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Devices is the list of devices
	Devices       []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDevicesResponse) Reset() {
	*x = ListDevicesResponse{}
	mi := &file_api_proto_v1_device_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesResponse) ProtoMessage() {}

func (x *ListDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_device_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListDevicesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_device_proto_rawDescGZIP(), []int{10}
}

func (x *ListDevicesResponse) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

var File_api_proto_v1_device_proto protoreflect.FileDescriptor

const file_api_proto_v1_device_proto_rawDesc = "" +
	"\n" +
	"\x19api/proto/v1/device.proto\x12\x0fthothnetwork.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc1\x03\n" +
	"\x06Device\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04type\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04type\x125\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1d.thothnetwork.v1.DeviceStatusR\x06status\x12A\n" +
	"\bmetadata\x18\x05 \x03(\v2%.thothnetwork.v1.Device.MetadataEntryR\bmetadata\x127\n" +
	"\tlast_seen\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe0\x01\n" +
	"\x15RegisterDeviceRequest\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04type\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04type\x12P\n" +
	"\bmetadata\x18\x03 \x03(\v24.thothnetwork.v1.RegisterDeviceRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Y\n" +
	"\x16RegisterDeviceResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12/\n" +
	"\x06device\x18\x02 \x01(\v2\x17.thothnetwork.v1.DeviceR\x06device\"+\n" +
	"\x10GetDeviceRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\"D\n" +
	"\x11GetDeviceResponse\x12/\n" +
	"\x06device\x18\x01 \x01(\v2\x17.thothnetwork.v1.DeviceR\x06device\"\xe3\x01\n" +
	"\x13UpdateDeviceRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12N\n" +
	"\bmetadata\x18\x04 \x03(\v22.thothnetwork.v1.UpdateDeviceRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"G\n" +
	"\x14UpdateDeviceResponse\x12/\n" +
	"\x06device\x18\x01 \x01(\v2\x17.thothnetwork.v1.DeviceR\x06device\".\n" +
	"\x13DeleteDeviceRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x02id\"0\n" +
	"\x14DeleteDeviceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xf1\x01\n" +
	"\x12ListDevicesRequest\x12\x14\n" +
	"\x05types\x18\x01 \x03(\tR\x05types\x129\n" +
	"\bstatuses\x18\x02 \x03(\x0e2\x1d.thothnetwork.v1.DeviceStatusR\bstatuses\x12M\n" +
	"\bmetadata\x18\x03 \x03(\v21.thothnetwork.v1.ListDevicesRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"H\n" +
	"\x13ListDevicesResponse\x121\n" +
	"\adevices\x18\x01 \x03(\v2\x17.thothnetwork.v1.DeviceR\adevices*\x9b\x01\n" +
	"\fDeviceStatus\x12\x1d\n" +
	"\x19DEVICE_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14DEVICE_STATUS_ONLINE\x10\x01\x12\x19\n" +
	"\x15DEVICE_STATUS_OFFLINE\x10\x02\x12\x1e\n" +
	"\x1aDEVICE_STATUS_DISCONNECTED\x10\x03\x12\x17\n" +
	"\x13DEVICE_STATUS_ERROR\x10\x042\xda\x03\n" +
	"\rDeviceService\x12a\n" +
	"\x0eRegisterDevice\x12&.thothnetwork.v1.RegisterDeviceRequest\x1a'.thothnetwork.v1.RegisterDeviceResponse\x12R\n" +
	"\tGetDevice\x12!.thothnetwork.v1.GetDeviceRequest\x1a\".thothnetwork.v1.GetDeviceResponse\x12[\n" +
	"\fUpdateDevice\x12$.thothnetwork.v1.UpdateDeviceRequest\x1a%.thothnetwork.v1.UpdateDeviceResponse\x12[\n" +
	"\fDeleteDevice\x12$.thothnetwork.v1.DeleteDeviceRequest\x1a%.thothnetwork.v1.DeleteDeviceResponse\x12X\n" +
	"\vListDevices\x12#.thothnetwork.v1.ListDevicesRequest\x1a$.thothnetwork.v1.ListDevicesResponseBAZ?github.com/ZanzyTHEbar/thothnetwork/gen/proto/v1;thothnetworkv1b\x06proto3"

var (
	file_api_proto_v1_device_proto_rawDescOnce sync.Once
	file_api_proto_v1_device_proto_rawDescData []byte
)

func file_api_proto_v1_device_proto_rawDescGZIP() []byte {
	file_api_proto_v1_device_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_device_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_v1_device_proto_rawDesc), len(file_api_proto_v1_device_proto_rawDesc)))
	})
	return file_api_proto_v1_device_proto_rawDescData
}

var file_api_proto_v1_device_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_v1_device_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_proto_v1_device_proto_goTypes = []any{
	(DeviceStatus)(0),              // 0: thothnetwork.v1.DeviceStatus
	(*Device)(nil),                 // 1: thothnetwork.v1.Device
	(*RegisterDeviceRequest)(nil),  // 2: thothnetwork.v1.RegisterDeviceRequest
	(*RegisterDeviceResponse)(nil), // 3: thothnetwork.v1.RegisterDeviceResponse
	(*GetDeviceRequest)(nil),       // 4: thothnetwork.v1.GetDeviceRequest
	(*GetDeviceResponse)(nil),      // 5: thothnetwork.v1.GetDeviceResponse
	(*UpdateDeviceRequest)(nil),    // 6: thothnetwork.v1.UpdateDeviceRequest
	(*UpdateDeviceResponse)(nil),   // 7: thothnetwork.v1.UpdateDeviceResponse
	(*DeleteDeviceRequest)(nil),    // 8: thothnetwork.v1.DeleteDeviceRequest
	(*DeleteDeviceResponse)(nil),   // 9: thothnetwork.v1.DeleteDeviceResponse
	(*ListDevicesRequest)(nil),     // 10: thothnetwork.v1.ListDevicesRequest
	(*ListDevicesResponse)(nil),    // 11: thothnetwork.v1.ListDevicesResponse
	nil,                            // 12: thothnetwork.v1.Device.MetadataEntry
	nil,                            // 13: thothnetwork.v1.RegisterDeviceRequest.MetadataEntry
	nil,                            // 14: thothnetwork.v1.UpdateDeviceRequest.MetadataEntry
	nil,                            // 15: thothnetwork.v1.ListDevicesRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil),  // 16: google.protobuf.Timestamp
}
var file_api_proto_v1_device_proto_depIdxs = []int32{
	0,  // 0: thothnetwork.v1.Device.status:type_name -> thothnetwork.v1.DeviceStatus
	12, // 1: thothnetwork.v1.Device.metadata:type_name -> thothnetwork.v1.Device.MetadataEntry
	16, // 2: thothnetwork.v1.Device.last_seen:type_name -> google.protobuf.Timestamp
	16, // 3: thothnetwork.v1.Device.created_at:type_name -> google.protobuf.Timestamp
	16, // 4: thothnetwork.v1.Device.updated_at:type_name -> google.protobuf.Timestamp
	13, // 5: thothnetwork.v1.RegisterDeviceRequest.metadata:type_name -> thothnetwork.v1.RegisterDeviceRequest.MetadataEntry
	1,  // 6: thothnetwork.v1.RegisterDeviceResponse.device:type_name -> thothnetwork.v1.Device
	1,  // 7: thothnetwork.v1.GetDeviceResponse.device:type_name -> thothnetwork.v1.Device
	14, // 8: thothnetwork.v1.UpdateDeviceRequest.metadata:type_name -> thothnetwork.v1.UpdateDeviceRequest.MetadataEntry
	1,  // 9: thothnetwork.v1.UpdateDeviceResponse.device:type_name -> thothnetwork.v1.Device
	0,  // 10: thothnetwork.v1.ListDevicesRequest.statuses:type_name -> thothnetwork.v1.DeviceStatus
	15, // 11: thothnetwork.v1.ListDevicesRequest.metadata:type_name -> thothnetwork.v1.ListDevicesRequest.MetadataEntry
	1,  // 12: thothnetwork.v1.ListDevicesResponse.devices:type_name -> thothnetwork.v1.Device
	2,  // 13: thothnetwork.v1.DeviceService.RegisterDevice:input_type -> thothnetwork.v1.RegisterDeviceRequest
	4,  // 14: thothnetwork.v1.DeviceService.GetDevice:input_type -> thothnetwork.v1.GetDeviceRequest
	6,  // 15: thothnetwork.v1.DeviceService.UpdateDevice:input_type -> thothnetwork.v1.UpdateDeviceRequest
	8,  // 16: thothnetwork.v1.DeviceService.DeleteDevice:input_type -> thothnetwork.v1.DeleteDeviceRequest
	10, // 17: thothnetwork.v1.DeviceService.ListDevices:input_type -> thothnetwork.v1.ListDevicesRequest
	3,  // 18: thothnetwork.v1.DeviceService.RegisterDevice:output_type -> thothnetwork.v1.RegisterDeviceResponse
	5,  // 19: thothnetwork.v1.DeviceService.GetDevice:output_type -> thothnetwork.v1.GetDeviceResponse
	7,  // 20: thothnetwork.v1.DeviceService.UpdateDevice:output_type -> thothnetwork.v1.UpdateDeviceResponse
	9,  // 21: thothnetwork.v1.DeviceService.DeleteDevice:output_type -> thothnetwork.v1.DeleteDeviceResponse
	11, // 22: thothnetwork.v1.DeviceService.ListDevices:output_type -> thothnetwork.v1.ListDevicesResponse
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_proto_v1_device_proto_init() }
func file_api_proto_v1_device_proto_init() {
	if File_api_proto_v1_device_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_v1_device_proto_rawDesc), len(file_api_proto_v1_device_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_v1_device_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_device_proto_depIdxs,
		EnumInfos:         file_api_proto_v1_device_proto_enumTypes,
		MessageInfos:      file_api_proto_v1_device_proto_msgTypes,
	}.Build()
	File_api_proto_v1_device_proto = out.File
	file_api_proto_v1_device_proto_goTypes = nil
	file_api_proto_v1_device_proto_depIdxs = nil
}
